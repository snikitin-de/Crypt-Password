apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = 0
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def version = "${versionMajor}.${versionMinor}.${versionPatch}-" +
                            "debug+build.${versionBuild}"

        android.applicationVariants.all { variant ->
            variant.outputs.all {
                if (buildType.name == "release") {
                    version = version.split("-", 0)[0]
                }
                outputFileName = "crypt-password"
                outputFileName += "-v" + version + ".apk"
            }
        }

        versionProps['VERSION_MAJOR'] = versionMajor.toString()
        versionProps['VERSION_MINOR'] = versionMinor.toString()
        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()

        def buildType = gradle.startParameter.taskNames.any{it.toLowerCase().contains("debug")} ?
                        "debug" : "release"

        if (buildType == "release"){
            versionProps['VERSION'] = version.split("-", 0)[0]
        } else if (buildType == "debug"){
            versionProps['VERSION'] = version.toString()
        }

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "com.snikitinde.cryptpassword"
            minSdkVersion 28
            targetSdkVersion 29
            versionCode versionBuild
            versionName versionProps['VERSION'].toString()
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.github.kenglxn.QRGen:android:2.3.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.biometric:biometric:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}